// Generated by Dagger (https://dagger.dev).
package com.weatherapp.activities;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<WeatherViewModelFactory> weatherViewModelFactoryProvider;

  private final Provider<WeatherViewModel> weatherViewModelProvider;

  public MainActivity_MembersInjector(
      Provider<WeatherViewModelFactory> weatherViewModelFactoryProvider,
      Provider<WeatherViewModel> weatherViewModelProvider) {
    this.weatherViewModelFactoryProvider = weatherViewModelFactoryProvider;
    this.weatherViewModelProvider = weatherViewModelProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<WeatherViewModelFactory> weatherViewModelFactoryProvider,
      Provider<WeatherViewModel> weatherViewModelProvider) {
    return new MainActivity_MembersInjector(weatherViewModelFactoryProvider, weatherViewModelProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectWeatherViewModelFactory(instance, weatherViewModelFactoryProvider.get());
    injectWeatherViewModel(instance, weatherViewModelProvider.get());
  }

  @InjectedFieldSignature("com.weatherapp.activities.MainActivity.weatherViewModelFactory")
  public static void injectWeatherViewModelFactory(MainActivity instance,
      WeatherViewModelFactory weatherViewModelFactory) {
    instance.weatherViewModelFactory = weatherViewModelFactory;
  }

  @InjectedFieldSignature("com.weatherapp.activities.MainActivity.weatherViewModel")
  public static void injectWeatherViewModel(MainActivity instance,
      WeatherViewModel weatherViewModel) {
    instance.weatherViewModel = weatherViewModel;
  }
}
