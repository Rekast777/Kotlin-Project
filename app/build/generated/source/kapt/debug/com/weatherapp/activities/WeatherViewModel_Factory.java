// Generated by Dagger (https://dagger.dev).
package com.weatherapp.activities;

import com.weatherapp.network.WeatherService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherViewModel_Factory implements Factory<WeatherViewModel> {
  private final Provider<WeatherService> serviceProvider;

  public WeatherViewModel_Factory(Provider<WeatherService> serviceProvider) {
    this.serviceProvider = serviceProvider;
  }

  @Override
  public WeatherViewModel get() {
    return newInstance(serviceProvider.get());
  }

  public static WeatherViewModel_Factory create(Provider<WeatherService> serviceProvider) {
    return new WeatherViewModel_Factory(serviceProvider);
  }

  public static WeatherViewModel newInstance(WeatherService service) {
    return new WeatherViewModel(service);
  }
}
